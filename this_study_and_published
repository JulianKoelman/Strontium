# ─────────────────────────────────────────────────────────────────────
#  Sr isotope plot + Published human swarms (fixed y‐limits)
# ─────────────────────────────────────────────────────────────────────

setwd("C:/Users/julko253/Dropbox/_PhD/_Project_1_ADN_FVK_KOR/Sr")

library(readxl)
library(tidyverse)
library(colorspace)
library(ggtext)
library(ggbeeswarm)
library(RColorBrewer)

# 1 ── Constants & palettes ──────────────────────────────────────────
xlsx       <- "Sr_values_Project1.xlsx"
sheet      <- 5   # This_study_plot
site_order <- c("Alvastra Dolmen","Fagervik","Korsnäs")

alt_cols <- list(
  "Alvastra Dolmen" = c("#5E7182","#6C5D6F"),
  "Fagervik"        = c("#4D774E","#7B8C26"),
  "Korsnäs"         = c("#8B4513","#D4B290")
)
site_cols    <- map_chr(alt_cols, 1)

indiv_gap    <- 2.0
line_step    <- 0.08
label_offset <- 0.00040

# 2 ── Load & prep This‐study data ───────────────────────────────────
raw <- read_excel(xlsx, sheet = sheet) %>%
  fill(`Lab ID`,Tooth,Individual,Site, .direction="down") %>%
  filter(!is.na(`87Sr/86Sr`)) %>%
  mutate(
    Radiocarbon_date = as.numeric(Radiocarbon_date),
    ymax = `87Sr/86Sr` + `2SE`,
    ymin = `87Sr/86Sr` - `2SE`,
    newID = paste(Individual, Tooth, sep=":"),
    LineNumber = `Line Number`
  )

# 3 ── Chrono order & overrides ──────────────────────────────────────
indiv_order <- raw %>%
  distinct(Individual,Site,Radiocarbon_date) %>%
  mutate(site_rank = match(Site,site_order)) %>%
  arrange(site_rank,desc(Radiocarbon_date)) %>%
  pull(Individual)

tooth_levels <- list(
  kor009 = c("P2 mand dxt","P2 mand sin","M3 mand sin"),
  fvk002 = c("M2 max","M3 max")
)

newID_order <- unlist(lapply(indiv_order, function(ind) {
  df <- raw %>% filter(Individual==ind) %>% distinct(Tooth,newID)
  if(ind %in% names(tooth_levels))
    df <- df %>% mutate(Tooth=factor(Tooth,levels=tooth_levels[[ind]]))
  df %>% arrange(Tooth) %>% pull(newID)
}))

# 4 ── Alternate shade per tooth‐cluster ─────────────────────────────
newID_table <- raw %>%
  distinct(Site,newID) %>%
  mutate(newID=factor(newID,levels=newID_order)) %>%
  group_by(Site) %>%
  arrange(newID) %>%
  mutate(
    idx         = row_number(),
    base_colour = map2_chr(Site,idx,~{
      shades <- alt_cols[[.x]]
      shades[((.y-1)%%length(shades))+1]
    })
  ) %>%
  ungroup() %>%
  select(Site,newID,base_colour)

# 5 ── Build study table & x_plot ────────────────────────────────────
study <- raw %>%
  left_join(newID_table,by=c("Site","newID")) %>%
  mutate(
    colour_pt = if_else(Exclude=="Yes",
                        lighten(base_colour,0.45),
                        base_colour),
    x_center  = indiv_gap * match(newID,newID_order),
    x_plot    = x_center +
      (LineNumber - (max(LineNumber)+1)/2) * line_step
  )

# 6 ── Labels for study clusters ─────────────────────────────────────
label_pos <- study %>%
  group_by(newID,base_colour,Individual,Tooth,Radiocarbon_date,x_center) %>%
  summarise(y_top = max(ymax)+label_offset, .groups="drop") %>%
  mutate(
    label_md = sprintf("<b>%s</b><br>%s<br>%s&nbsp;BP",
                       Individual,Tooth,Radiocarbon_date)
  )

# 7 ── Read & prep Published human data ──────────────────────────────
pub_raw <- read_excel(xlsx, sheet="Published_human") %>%
  filter(!is.na(`87Sr/86Sr`)) %>%
  rename(
    Site_pub     = Site,
    Region       = Region,
    Context      = Context,
    Sr_ratio_pub = `87Sr/86Sr`
  )

pub_sites <- unique(pub_raw$Site_pub)
n_pub     <- length(pub_sites)
pub_cols  <- setNames(
  colorRampPalette(brewer.pal(8,"Dark2"))(n_pub),
  pub_sites
)

max_center  <- max(study$x_center)
pub_offset  <- indiv_gap * 2
pub_gap     <- indiv_gap * 0.5
pub_centers <- max_center + pub_offset + pub_gap * (seq_along(pub_sites)-1)

pub_df <- pub_raw %>%
  mutate(x_center_pub = pub_centers[match(Site_pub,pub_sites)])

# 8 ── Combine y‐ranges for scale limits ─────────────────────────────
all_y <- range(
  c(study$ymin, study$ymax, pub_df$Sr_ratio_pub),
  na.rm = TRUE
)
y_breaks <- seq(
  floor(all_y[1]/0.01)*0.01,
  ceiling(all_y[2]/0.01)*0.01,
  by = 0.01
)
y_minor  <- seq(
  floor(all_y[1]/0.002)*0.002,
  ceiling(all_y[2]/0.002)*0.002,
  by = 0.002
)

# 9 ── Plot ───────────────────────────────────────────────────────────
p <- ggplot() +
  # Study layers
  geom_errorbar(
    data = study,
    aes(x=x_plot, y=`87Sr/86Sr`, ymin=ymin, ymax=ymax,
        colour=base_colour),
    width=0, show.legend=FALSE
  ) +
  geom_point(
    data = filter(study,Exclude=="No"),
    aes(x=x_plot, y=`87Sr/86Sr`, colour=base_colour),
    shape=16, size=3, show.legend=TRUE
  ) +
  geom_point(
    data = filter(study,Exclude=="Yes"),
    aes(x=x_plot, y=`87Sr/86Sr`, colour=base_colour),
    shape=21, fill="white", stroke=0.8, size=3,
    show.legend=TRUE
  ) +
  geom_richtext(
    data = label_pos,
    aes(x=x_center, y=y_top, label=label_md,
        colour=base_colour),
    fill=NA, label.color=NA,
    size=3.2, lineheight=0.9,
    hjust=0.5, vjust=0,
    show.legend=FALSE
  ) +
  # Study legend
  scale_colour_identity(
    name   = "This study",
    breaks = site_cols,
    labels = names(site_cols),
    drop   = FALSE,
    guide  = guide_legend(override.aes=list(shape=16,size=4, colour = site_cols),
                          order=1)
  ) +
  
  # Published swarm
  geom_quasirandom(
    data       = pub_df,
    aes(x=x_center_pub, y=Sr_ratio_pub, fill=Site_pub),
    shape      = 21, colour='black', stroke=NA,
    groupOnX   = TRUE,
    width      = line_step*1.5,
    size       = 3, alpha=0.8,
    show.legend=TRUE
  ) +
  

  
  # Published legend
  scale_fill_manual(
    name   = "Published sites",
    values = pub_cols,
    guide  = guide_legend(override.aes=list(shape=21,
                                            size=4,
                                            colour=NA),
                                            order=2)
  ) +
  
  # combine axes limits & grid
  scale_x_continuous(breaks=NULL,
                     expand=expansion(mult=c(0.06,0.03))) +
  scale_y_continuous(
    limits      = all_y,
    breaks      = y_breaks,
    minor_breaks= y_minor,
    expand      = expansion(mult=c(0.02,0.05))
  ) +
  
  labs(
    x        = NULL,
    y        = expression(""^{87}*Sr/""^{86}*Sr),
    title    = "Strontium-isotope measurements – all teeth",
    subtitle = "Study data (left) + Published human swarms (right)"
  ) +
  coord_cartesian(clip="off") +
  theme_classic(base_size=13) +
  theme(
    legend.position    = "right",
    plot.margin        = margin(5,80,5,5,"pt"),
    axis.text.x        = element_blank(),
    axis.ticks.x       = element_blank(),
    panel.grid.major.y = element_line(color="grey70",size=0.4),
    panel.grid.minor.y = element_line(color="grey90",size=0.2),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank()
  )

print(p)

# 10 ── Export PNG
ggsave("Sr_plot_with_published_swarm.png", plot=p,
       width=14, height=7, dpi=300)
